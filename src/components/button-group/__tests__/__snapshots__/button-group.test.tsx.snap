// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ButtonGroup should match a snapshot for Button Group with 1 Icon only button 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div>
        <mock-styled.button
          classname="mock-css."
        >
          <mock-styled.div />
          Button 1
        </mock-styled.button>
        <mock-styled.button
          classname="mock-css."
        >
          <mock-styled.div />
          Button 2
        </mock-styled.button>
        <mock-styled.button
          classname="mock-css."
        >
          <mock-styled.div />
          Button 3
        </mock-styled.button>
        <mock-styled.button
          classname="mock-css."
        >
          <mock-styled.div />
          Button 4
        </mock-styled.button>
        <mock-styled.button
          classname="mock-css. mock-css."
        >
          <mock-styled.div />
          <mock-styled.span
            classname="mock-css."
            style="font-size: 1rem;"
          >
            <svg
              role="img"
              style="font-size: 1rem;"
              title="Icon image with name more"
            />
          </mock-styled.span>
        </mock-styled.button>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div>
      <mock-styled.button
        classname="mock-css."
      >
        <mock-styled.div />
        Button 1
      </mock-styled.button>
      <mock-styled.button
        classname="mock-css."
      >
        <mock-styled.div />
        Button 2
      </mock-styled.button>
      <mock-styled.button
        classname="mock-css."
      >
        <mock-styled.div />
        Button 3
      </mock-styled.button>
      <mock-styled.button
        classname="mock-css."
      >
        <mock-styled.div />
        Button 4
      </mock-styled.button>
      <mock-styled.button
        classname="mock-css. mock-css."
      >
        <mock-styled.div />
        <mock-styled.span
          classname="mock-css."
          style="font-size: 1rem;"
        >
          <svg
            role="img"
            style="font-size: 1rem;"
            title="Icon image with name more"
          />
        </mock-styled.span>
      </mock-styled.button>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`ButtonGroup should match a snapshot for Button Group with Primary button 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div>
        <mock-styled.button
          classname="mock-css."
        >
          <mock-styled.div />
          Button 1
        </mock-styled.button>
        <mock-styled.button
          classname="mock-css."
        >
          <mock-styled.div />
          Button 2
        </mock-styled.button>
        <mock-styled.button
          classname="mock-css."
        >
          <mock-styled.div />
          Button 3
        </mock-styled.button>
        <mock-styled.button
          classname="mock-css."
        >
          <mock-styled.div />
          Button 4
        </mock-styled.button>
        <mock-styled.button
          classname="mock-css."
        >
          <mock-styled.div />
          Button 5
        </mock-styled.button>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div>
      <mock-styled.button
        classname="mock-css."
      >
        <mock-styled.div />
        Button 1
      </mock-styled.button>
      <mock-styled.button
        classname="mock-css."
      >
        <mock-styled.div />
        Button 2
      </mock-styled.button>
      <mock-styled.button
        classname="mock-css."
      >
        <mock-styled.div />
        Button 3
      </mock-styled.button>
      <mock-styled.button
        classname="mock-css."
      >
        <mock-styled.div />
        Button 4
      </mock-styled.button>
      <mock-styled.button
        classname="mock-css."
      >
        <mock-styled.div />
        Button 5
      </mock-styled.button>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`ButtonGroup should match a snapshot for default Button Group 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div>
        <mock-styled.button
          classname="mock-css."
        >
          <mock-styled.div />
          Button 1
        </mock-styled.button>
        <mock-styled.button
          classname="mock-css."
        >
          <mock-styled.div />
          Button 2
        </mock-styled.button>
        <mock-styled.button
          classname="mock-css."
        >
          <mock-styled.div />
          Button 3
        </mock-styled.button>
        <mock-styled.button
          classname="mock-css."
        >
          <mock-styled.div />
          Button 4
        </mock-styled.button>
        <mock-styled.button
          classname="mock-css."
        >
          <mock-styled.div />
          Button 5
        </mock-styled.button>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div>
      <mock-styled.button
        classname="mock-css."
      >
        <mock-styled.div />
        Button 1
      </mock-styled.button>
      <mock-styled.button
        classname="mock-css."
      >
        <mock-styled.div />
        Button 2
      </mock-styled.button>
      <mock-styled.button
        classname="mock-css."
      >
        <mock-styled.div />
        Button 3
      </mock-styled.button>
      <mock-styled.button
        classname="mock-css."
      >
        <mock-styled.div />
        Button 4
      </mock-styled.button>
      <mock-styled.button
        classname="mock-css."
      >
        <mock-styled.div />
        Button 5
      </mock-styled.button>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
