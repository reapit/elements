// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MenuButton should render properly using menuGroups, optional icon, intent and hasBorder props 1`] = `
<DocumentFragment>
  <mock-styled.div>
    <mock-styled.div
      buttonicon="[object Object]"
      classname="mock-css. mock-css."
      id="menu-button-toggler"
      intent="primary"
      type="button"
    >
      MenuButton label
    </mock-styled.div>
    <mock-styled.div
      data-testid="menu"
      id="menu-button-menu"
    >
      <div>
        <mock-styled.ul
          classname="mock-css."
        >
          <li>
            <mock-styled.div>
              Group title
            </mock-styled.div>
          </li>
          <mock-styled.li>
            <mock-styled.a
              href="/"
            >
              <div
                class="mock-css.
  font-family: var(--font-sans-serif);
  color: var(--black);
  font-size: 15px;
  line-height: 24px;
  font-weight: 400;

  &., {
    color: var(--neutral-500);
  }

  &., {
    color: var(--neutral-400);

    a {
      color: var(--neutral-400);
    }
  }

  &., {
    font-weight: var(--font-weight-default);
  }

  &., {
    font-weight: var(--font-weight-medium);
  }

  &., {
    font-weight: var(--font-weight-bold);
  }

  &., {
    text-align: center;
  }

  &., {
    text-transform: capitalize;
  }

  &., {
    text-transform: uppercase;
  }

  &., {
    font-style: italic;
  }

  &., {
    margin-bottom: 0;
  }

  &., {
    margin-bottom: 0.5rem;
  }

  &., {
    margin-bottom: 1.5rem;
  }

  &., {
    color: var(--intent-primary);
  }

  &., {
    color: var(--intent-neutral);
  }

  &., {
    color: var(--intent-success);
  }

  &., {
    color: var(--intent-pending);
  }

  &., {
    color: var(--intent-warning);
  }

  &., {
    color: var(--intent-danger);
  }

  &., {
    color: var(--intent-default);
  }
 mock-css.
  font-size: 14px;
  line-height: 20px;
 mock-css. mock-css."
              >
                This is a Link 1
              </div>
            </mock-styled.a>
          </mock-styled.li>
        </mock-styled.ul>
      </div>
      <div>
        <mock-styled.div />
        <mock-styled.ul
          classname="mock-css."
        >
          <li>
            <mock-styled.div>
              Group title
            </mock-styled.div>
          </li>
          <mock-styled.li>
            <mock-styled.button>
              <div
                class="mock-css.
  font-family: var(--font-sans-serif);
  color: var(--black);
  font-size: 15px;
  line-height: 24px;
  font-weight: 400;

  &., {
    color: var(--neutral-500);
  }

  &., {
    color: var(--neutral-400);

    a {
      color: var(--neutral-400);
    }
  }

  &., {
    font-weight: var(--font-weight-default);
  }

  &., {
    font-weight: var(--font-weight-medium);
  }

  &., {
    font-weight: var(--font-weight-bold);
  }

  &., {
    text-align: center;
  }

  &., {
    text-transform: capitalize;
  }

  &., {
    text-transform: uppercase;
  }

  &., {
    font-style: italic;
  }

  &., {
    margin-bottom: 0;
  }

  &., {
    margin-bottom: 0.5rem;
  }

  &., {
    margin-bottom: 1.5rem;
  }

  &., {
    color: var(--intent-primary);
  }

  &., {
    color: var(--intent-neutral);
  }

  &., {
    color: var(--intent-success);
  }

  &., {
    color: var(--intent-pending);
  }

  &., {
    color: var(--intent-warning);
  }

  &., {
    color: var(--intent-danger);
  }

  &., {
    color: var(--intent-default);
  }
 mock-css.
  font-size: 14px;
  line-height: 20px;
 mock-css. mock-css."
              >
                This is a Button 1
              </div>
            </mock-styled.button>
          </mock-styled.li>
        </mock-styled.ul>
      </div>
    </mock-styled.div>
  </mock-styled.div>
</DocumentFragment>
`;

exports[`MenuButton should render the button with the correct label 1`] = `
<DocumentFragment>
  <mock-styled.div>
    <mock-styled.div
      buttonicon="[object Object]"
      classname=""
      id="menu-button-toggler"
      type="button"
    >
      MenuButton label
    </mock-styled.div>
  </mock-styled.div>
</DocumentFragment>
`;
