// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Pagination > should match a snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-1 el-pagination-wrap"
      >
        <button
          aria-label="Previous"
          class="mocked-styled-4 el-pagination-button"
          data-testid="back-button"
          role="button"
          type="button"
        >
          <span
            class="el-pagination-primary el-icon"
          />
        </button>
        <div
          class="mocked-styled-2 el-pagination-text"
        >
          <input
            aria-label="Current page number, edit to select page of 4 available"
            class="mocked-styled-3 el-pagination-input"
            value="2"
          />
           
          of 
          4
        </div>
        <button
          aria-label="Next"
          class="mocked-styled-4 el-pagination-button"
          data-testid="forward-button"
          role="button"
          type="button"
        >
          <span
            class="el-pagination-primary el-icon"
          />
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-1 el-pagination-wrap"
    >
      <button
        aria-label="Previous"
        class="mocked-styled-4 el-pagination-button"
        data-testid="back-button"
        role="button"
        type="button"
      >
        <span
          class="el-pagination-primary el-icon"
        />
      </button>
      <div
        class="mocked-styled-2 el-pagination-text"
      >
        <input
          aria-label="Current page number, edit to select page of 4 available"
          class="mocked-styled-3 el-pagination-input"
          value="2"
        />
         
        of 
        4
      </div>
      <button
        aria-label="Next"
        class="mocked-styled-4 el-pagination-button"
        data-testid="forward-button"
        role="button"
        type="button"
      >
        <span
          class="el-pagination-primary el-icon"
        />
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Pagination > should match a snapshot with start end buttons 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-1 el-pagination-wrap"
      >
        <button
          aria-label="Previous"
          class="mocked-styled-4 el-pagination-button"
          data-testid="back-button"
          role="button"
          type="button"
        >
          <span
            class="el-pagination-primary el-icon"
          />
        </button>
        <button
          aria-label="Previous"
          class="mocked-styled-4 el-pagination-button"
          data-testid="back-button"
          role="button"
          type="button"
        >
          <span
            class="el-pagination-primary el-icon"
          />
          <span
            class="el-pagination-primary el-icon"
          />
        </button>
        <div
          class="mocked-styled-2 el-pagination-text"
        >
          <input
            aria-label="Current page number, edit to select page of 4 available"
            class="mocked-styled-3 el-pagination-input"
            value="2"
          />
           
          of 
          4
        </div>
        <button
          aria-label="Next"
          class="mocked-styled-4 el-pagination-button"
          data-testid="back-button"
          role="button"
          type="button"
        >
          <span
            class="el-pagination-primary el-icon"
          />
          <span
            class="el-pagination-primary el-icon"
          />
        </button>
        <button
          aria-label="Next"
          class="mocked-styled-4 el-pagination-button"
          data-testid="forward-button"
          role="button"
          type="button"
        >
          <span
            class="el-pagination-primary el-icon"
          />
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-1 el-pagination-wrap"
    >
      <button
        aria-label="Previous"
        class="mocked-styled-4 el-pagination-button"
        data-testid="back-button"
        role="button"
        type="button"
      >
        <span
          class="el-pagination-primary el-icon"
        />
      </button>
      <button
        aria-label="Previous"
        class="mocked-styled-4 el-pagination-button"
        data-testid="back-button"
        role="button"
        type="button"
      >
        <span
          class="el-pagination-primary el-icon"
        />
        <span
          class="el-pagination-primary el-icon"
        />
      </button>
      <div
        class="mocked-styled-2 el-pagination-text"
      >
        <input
          aria-label="Current page number, edit to select page of 4 available"
          class="mocked-styled-3 el-pagination-input"
          value="2"
        />
         
        of 
        4
      </div>
      <button
        aria-label="Next"
        class="mocked-styled-4 el-pagination-button"
        data-testid="back-button"
        role="button"
        type="button"
      >
        <span
          class="el-pagination-primary el-icon"
        />
        <span
          class="el-pagination-primary el-icon"
        />
      </button>
      <button
        aria-label="Next"
        class="mocked-styled-4 el-pagination-button"
        data-testid="forward-button"
        role="button"
        type="button"
      >
        <span
          class="el-pagination-primary el-icon"
        />
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`PaginationButton > should match a snapshot and render children 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <button
        class="mocked-styled-4 el-pagination-button"
        type="button"
      >
        <div>
          I am a child
        </div>
      </button>
    </div>
  </body>,
  "container": <div>
    <button
      class="mocked-styled-4 el-pagination-button"
      type="button"
    >
      <div>
        I am a child
      </div>
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`PaginationText > should match a snapshot and render children 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-2 el-pagination-text"
      >
        <div>
          I am a child
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-2 el-pagination-text"
    >
      <div>
        I am a child
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`PaginationWrap > should match a snapshot and render children 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-1 el-pagination-wrap"
      >
        <div>
          I am a child
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-1 el-pagination-wrap"
    >
      <div>
        I am a child
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
