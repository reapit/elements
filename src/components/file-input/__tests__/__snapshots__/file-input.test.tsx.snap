// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`FileInput component > should match a snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-1 el-file-input-wrap"
      >
        <div
          class="el-flex-container el-flex-align-center"
        >
          <button
            aria-disabled="false"
            class="el-mr4 el-button-size-medium el-button"
            role="button"
            type="button"
          >
            <div
              class="mocked-styled-5 el-button-spinner"
            />
            <span
              class="mocked-styled-6 el-button-label"
            >
              Upload
            </span>
          </button>
          <input
            aria-label="File upload input undefined"
            class="mocked-styled-0 el-file-input"
            data-testid="el-file-input"
            type="file"
          />
          <input
            aria-hidden="true"
            class="mocked-styled-3 el-file-input-hidden"
            id="test-static-id"
            value=""
          />
          <div
            class="el-text-base el-text-sm el-has-grey-text el-has-no-margin el-ml3"
          >
            Upload File
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-1 el-file-input-wrap"
    >
      <div
        class="el-flex-container el-flex-align-center"
      >
        <button
          aria-disabled="false"
          class="el-mr4 el-button-size-medium el-button"
          role="button"
          type="button"
        >
          <div
            class="mocked-styled-5 el-button-spinner"
          />
          <span
            class="mocked-styled-6 el-button-label"
          >
            Upload
          </span>
        </button>
        <input
          aria-label="File upload input undefined"
          class="mocked-styled-0 el-file-input"
          data-testid="el-file-input"
          type="file"
        />
        <input
          aria-hidden="true"
          class="mocked-styled-3 el-file-input-hidden"
          id="test-static-id"
          value=""
        />
        <div
          class="el-text-base el-text-sm el-has-grey-text el-has-no-margin el-ml3"
        >
          Upload File
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`FileInput component > should match a snapshot for the FilePreviewImage component 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <img
        class="mocked-styled-4 el-file-preview-image"
        src="https://mock-image.com"
      />
    </div>
  </body>,
  "container": <div>
    <img
      class="mocked-styled-4 el-file-preview-image"
      src="https://mock-image.com"
    />
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`FileInput component > should match a snapshot with full props 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-1 el-file-input-wrap"
      >
        <label
          class="mocked-styled-12 el-label"
        >
          Some Label
        </label>
        <div
          class="el-flex-container el-flex-align-center"
        >
          <button
            aria-disabled="false"
            class="el-mr4 el-button-size-medium el-button"
            role="button"
            type="button"
          >
            <div
              class="mocked-styled-5 el-button-spinner"
            />
            <span
              class="mocked-styled-6 el-button-label"
            >
              Change
            </span>
          </button>
          <input
            aria-label="File upload input Some Text"
            class="mocked-styled-0 el-file-input"
            data-testid="el-file-input"
            type="file"
          />
          <input
            aria-hidden="true"
            class="mocked-styled-3 el-file-input-hidden"
            id="test-static-id"
            value="https://mock.com"
          />
          <div
            class="mocked-styled-2 el-file-input-icon-container"
          >
            <span
              class="el-mr4 el-intent-primary el-icon"
              role="button"
            />
            <span
              class="el-mr4 el-intent-primary el-icon"
              role="button"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-1 el-file-input-wrap"
    >
      <label
        class="mocked-styled-12 el-label"
      >
        Some Label
      </label>
      <div
        class="el-flex-container el-flex-align-center"
      >
        <button
          aria-disabled="false"
          class="el-mr4 el-button-size-medium el-button"
          role="button"
          type="button"
        >
          <div
            class="mocked-styled-5 el-button-spinner"
          />
          <span
            class="mocked-styled-6 el-button-label"
          >
            Change
          </span>
        </button>
        <input
          aria-label="File upload input Some Text"
          class="mocked-styled-0 el-file-input"
          data-testid="el-file-input"
          type="file"
        />
        <input
          aria-hidden="true"
          class="mocked-styled-3 el-file-input-hidden"
          id="test-static-id"
          value="https://mock.com"
        />
        <div
          class="mocked-styled-2 el-file-input-icon-container"
        >
          <span
            class="el-mr4 el-intent-primary el-icon"
            role="button"
          />
          <span
            class="el-mr4 el-intent-primary el-icon"
            role="button"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
