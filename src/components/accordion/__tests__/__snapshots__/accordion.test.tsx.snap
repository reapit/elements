// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Accordion basic usage should match a snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            Accordion Item 1
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.span
                classname="mock-css.
  margin-right: 0.25rem;
"
                role="img"
              >
                <svg />
              </mock-styled.span>
              2
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.span
                classname="mock-css.
  margin-right: 0.25rem;
"
                role="img"
              >
                <svg />
              </mock-styled.span>
              5
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.span
                classname=""
                role="img"
              >
                <svg />
              </mock-styled.span>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          classname="mock-css."
        >
          Accordion Content 1
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            Accordion Item 2
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.span
                classname="mock-css.
  margin-right: 0.25rem;
"
                role="img"
              >
                <svg />
              </mock-styled.span>
              2
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.span
                classname="mock-css.
  margin-right: 0.25rem;
"
                role="img"
              >
                <svg />
              </mock-styled.span>
              5
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.span
                classname=""
                role="img"
              >
                <svg />
              </mock-styled.span>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          Accordion Content 2
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div>
      <mock-styled.div>
        <mock-styled.div>
          Accordion Item 1
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname="mock-css.
  margin-right: 0.25rem;
"
              role="img"
            >
              <svg />
            </mock-styled.span>
            2
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname="mock-css.
  margin-right: 0.25rem;
"
              role="img"
            >
              <svg />
            </mock-styled.span>
            5
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname=""
              role="img"
            >
              <svg />
            </mock-styled.span>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
        classname="mock-css."
      >
        Accordion Content 1
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div>
          Accordion Item 2
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname="mock-css.
  margin-right: 0.25rem;
"
              role="img"
            >
              <svg />
            </mock-styled.span>
            2
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname="mock-css.
  margin-right: 0.25rem;
"
              role="img"
            >
              <svg />
            </mock-styled.span>
            5
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname=""
              role="img"
            >
              <svg />
            </mock-styled.span>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div>
        Accordion Content 2
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Accordion react shorthand should match a snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div>
        <mock-styled.div
          aria-controls=":r0:-0"
          id=":r1:-0"
        >
          <mock-styled.div>
            Accordion Item 1
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.span
                classname="mock-css.
  margin-right: 0.25rem;
"
                role="img"
              >
                <svg />
              </mock-styled.span>
              2
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.span
                classname="mock-css.
  margin-right: 0.25rem;
"
                role="img"
              >
                <svg />
              </mock-styled.span>
              5
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.span
                classname="mock-css. mock-css.
  font-size: 1.5rem;
"
                role="img"
                style="font-size: 1.25rem;"
              >
                <svg
                  style="font-size: 1.25rem;"
                />
              </mock-styled.span>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          aria-expanded="false"
          aria-labelledby=":r1:-0"
          classname=""
          id=":r0:-0"
          role="region"
        >
          Accordion Content 1
        </mock-styled.div>
        <mock-styled.div
          aria-controls=":r0:-1"
          id=":r1:-1"
        >
          <mock-styled.div>
            Accordion Item 2
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.span
                classname="mock-css.
  margin-right: 0.25rem;
"
                role="img"
              >
                <svg />
              </mock-styled.span>
              2
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.span
                classname="mock-css.
  margin-right: 0.25rem;
"
                role="img"
              >
                <svg />
              </mock-styled.span>
              5
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.span
                classname="mock-css. mock-css.
  font-size: 1.5rem;
"
                role="img"
                style="font-size: 1.25rem;"
              >
                <svg
                  style="font-size: 1.25rem;"
                />
              </mock-styled.span>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          aria-expanded="false"
          aria-labelledby=":r1:-1"
          classname=""
          id=":r0:-1"
          role="region"
        >
          Accordion Content 2
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div>
      <mock-styled.div
        aria-controls=":r0:-0"
        id=":r1:-0"
      >
        <mock-styled.div>
          Accordion Item 1
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname="mock-css.
  margin-right: 0.25rem;
"
              role="img"
            >
              <svg />
            </mock-styled.span>
            2
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname="mock-css.
  margin-right: 0.25rem;
"
              role="img"
            >
              <svg />
            </mock-styled.span>
            5
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname="mock-css. mock-css.
  font-size: 1.5rem;
"
              role="img"
              style="font-size: 1.25rem;"
            >
              <svg
                style="font-size: 1.25rem;"
              />
            </mock-styled.span>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
        aria-expanded="false"
        aria-labelledby=":r1:-0"
        classname=""
        id=":r0:-0"
        role="region"
      >
        Accordion Content 1
      </mock-styled.div>
      <mock-styled.div
        aria-controls=":r0:-1"
        id=":r1:-1"
      >
        <mock-styled.div>
          Accordion Item 2
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname="mock-css.
  margin-right: 0.25rem;
"
              role="img"
            >
              <svg />
            </mock-styled.span>
            2
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname="mock-css.
  margin-right: 0.25rem;
"
              role="img"
            >
              <svg />
            </mock-styled.span>
            5
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname="mock-css. mock-css.
  font-size: 1.5rem;
"
              role="img"
              style="font-size: 1.25rem;"
            >
              <svg
                style="font-size: 1.25rem;"
              />
            </mock-styled.span>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
        aria-expanded="false"
        aria-labelledby=":r1:-1"
        classname=""
        id=":r0:-1"
        role="region"
      >
        Accordion Content 2
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
