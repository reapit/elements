// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`BreadCrumb > should match a snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-1 el-bread-crumb-container"
      >
        <div
          class="el-flex-container el-flex-align-center"
        >
          <a
            aria-current="false"
            aria-label="Breadcrumb item hit return to navigate to Home"
            class="mocked-styled-0 el-bread-crumb-item"
            role="button"
            tabindex="0"
          >
            Home
          </a>
        </div>
        <div
          class="el-flex-container el-flex-align-center"
        >
          <span
            class="el-mr2 el-intent-default el-icon"
          />
          <a
            aria-current="false"
            aria-label="Breadcrumb item hit return to navigate to Level 1"
            class="mocked-styled-0 el-bread-crumb-item"
            role="button"
            tabindex="0"
          >
            Level 1
          </a>
        </div>
        <div
          class="el-flex-container el-flex-align-center"
        >
          <span
            class="el-mr2 el-intent-default el-icon"
          />
          <a
            aria-current="false"
            aria-label="Breadcrumb item hit return to navigate to Level 2"
            class="mocked-styled-0 el-bread-crumb-item"
            role="button"
            tabindex="0"
          >
            Level 2
          </a>
        </div>
        <div
          class="el-flex-container el-flex-align-center"
        >
          <span
            class="el-mr2 el-intent-default el-icon"
          />
          <a
            aria-current="page"
            aria-label="Breadcrumb item hit return to navigate to Level 3"
            class="mocked-styled-0 el-bread-crumb-item"
            role="button"
            tabindex="0"
          >
            Level 3
          </a>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-1 el-bread-crumb-container"
    >
      <div
        class="el-flex-container el-flex-align-center"
      >
        <a
          aria-current="false"
          aria-label="Breadcrumb item hit return to navigate to Home"
          class="mocked-styled-0 el-bread-crumb-item"
          role="button"
          tabindex="0"
        >
          Home
        </a>
      </div>
      <div
        class="el-flex-container el-flex-align-center"
      >
        <span
          class="el-mr2 el-intent-default el-icon"
        />
        <a
          aria-current="false"
          aria-label="Breadcrumb item hit return to navigate to Level 1"
          class="mocked-styled-0 el-bread-crumb-item"
          role="button"
          tabindex="0"
        >
          Level 1
        </a>
      </div>
      <div
        class="el-flex-container el-flex-align-center"
      >
        <span
          class="el-mr2 el-intent-default el-icon"
        />
        <a
          aria-current="false"
          aria-label="Breadcrumb item hit return to navigate to Level 2"
          class="mocked-styled-0 el-bread-crumb-item"
          role="button"
          tabindex="0"
        >
          Level 2
        </a>
      </div>
      <div
        class="el-flex-container el-flex-align-center"
      >
        <span
          class="el-mr2 el-intent-default el-icon"
        />
        <a
          aria-current="page"
          aria-label="Breadcrumb item hit return to navigate to Level 3"
          class="mocked-styled-0 el-bread-crumb-item"
          role="button"
          tabindex="0"
        >
          Level 3
        </a>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
