// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PageHeader component should match a snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div
          classname=""
        >
          <mock-styled.div
            classname="mock-css.
  margin-bottom: var(--util-rems-6);
"
          >
            <div
              class="mock-css.
  display: flex;
  min-height: 0;
  min-width: 0;

  &., {
    background: var(--neutral-050);
  }

  &., {
    max-width: 1200px;
    margin: 0 auto;
  }
 mock-css.
  align-items: center;
"
            >
              <mock-styled.a
                aria-current="false"
                aria-label="Breadcrumb item hit return to navigate to Home"
                role="button"
                tabindex="0"
              >
                Home
              </mock-styled.a>
            </div>
            <div
              class="mock-css.
  display: flex;
  min-height: 0;
  min-width: 0;

  &., {
    background: var(--neutral-050);
  }

  &., {
    max-width: 1200px;
    margin: 0 auto;
  }
 mock-css.
  align-items: center;
"
            >
              <mock-styled.span
                classname="mock-css.
  margin-right: var(--util-rems-2);
 mock-css."
                style="font-size: 12px;"
              >
                <svg
                  role="img"
                  style="font-size: 12px;"
                  title="Icon image with name chevronRight"
                />
              </mock-styled.span>
              <mock-styled.a
                aria-current="false"
                aria-label="Breadcrumb item hit return to navigate to Level 1"
                role="button"
                tabindex="0"
              >
                Level 1
              </mock-styled.a>
            </div>
            <div
              class="mock-css.
  display: flex;
  min-height: 0;
  min-width: 0;

  &., {
    background: var(--neutral-050);
  }

  &., {
    max-width: 1200px;
    margin: 0 auto;
  }
 mock-css.
  align-items: center;
"
            >
              <mock-styled.span
                classname="mock-css.
  margin-right: var(--util-rems-2);
 mock-css."
                style="font-size: 12px;"
              >
                <svg
                  role="img"
                  style="font-size: 12px;"
                  title="Icon image with name chevronRight"
                />
              </mock-styled.span>
              <mock-styled.a
                aria-current="false"
                aria-label="Breadcrumb item hit return to navigate to Level 2"
                role="button"
                tabindex="0"
              >
                Level 2
              </mock-styled.a>
            </div>
            <div
              class="mock-css.
  display: flex;
  min-height: 0;
  min-width: 0;

  &., {
    background: var(--neutral-050);
  }

  &., {
    max-width: 1200px;
    margin: 0 auto;
  }
 mock-css.
  align-items: center;
"
            >
              <mock-styled.span
                classname="mock-css.
  margin-right: var(--util-rems-2);
 mock-css."
                style="font-size: 12px;"
              >
                <svg
                  role="img"
                  style="font-size: 12px;"
                  title="Icon image with name chevronRight"
                />
              </mock-styled.span>
              <mock-styled.a
                aria-current="page"
                aria-label="Breadcrumb item hit return to navigate to Level 3"
                role="button"
                tabindex="0"
              >
                Level 3
              </mock-styled.a>
            </div>
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.div
              classname=""
            >
              <mock-styled.mock-styled.div
                classname=""
                role="img"
                title="An avatar image"
              >
                <img
                  alt="An image with source https://picsum.photos/200/300"
                  src="https://picsum.photos/200/300"
                />
              </mock-styled.mock-styled.div>
              <div
                class="mock-css.
  display: flex;
  min-height: 0;
  min-width: 0;

  &., {
    background: var(--neutral-050);
  }

  &., {
    max-width: 1200px;
    margin: 0 auto;
  }
 mock-css.
  flex-direction: column;
"
              >
                <mock-styled.div
                  classname=""
                >
                  <h1
                    class="mock-css.
  font-family: var(--font-sans-serif);
  color: var(--black);
  font-size: 15px;
  line-height: 24px;
  font-weight: 400;

  &., {
    color: var(--neutral-500);
  }

  &., {
    color: var(--neutral-400);

    a {
      color: var(--neutral-400);
    }
  }

  &., {
    font-weight: var(--font-weight-default);
  }

  &., {
    font-weight: var(--font-weight-medium);
  }

  &., {
    font-weight: var(--font-weight-bold);
  }

  &., {
    text-align: center;
  }

  &., {
    text-transform: capitalize;
  }

  &., {
    text-transform: uppercase;
  }

  &., {
    font-style: italic;
  }

  &., {
    margin-bottom: 0;
  }

  &., {
    margin-bottom: 0.5rem;
  }

  &., {
    margin-bottom: 1.5rem;
  }

  &., {
    color: var(--intent-primary);
  }

  &., {
    color: var(--intent-neutral);
  }

  &., {
    color: var(--intent-success);
  }

  &., {
    color: var(--intent-pending);
  }

  &., {
    color: var(--intent-warning);
  }

  &., {
    color: var(--intent-danger);
  }

  &., {
    color: var(--intent-default);
  }
 mock-css.
  font-size: 24px;
  line-height: 32px;
 mock-css. mock-css.
  margin-right: var(--util-rems-3);
"
                  >
                    Page Title
                  </h1>
                  <mock-styled.div
                    classname=""
                  >
                    <mock-styled.div>
                      <mock-styled.span
                        classname="mock-css."
                      >
                        Tag 1
                      </mock-styled.span>
                      <mock-styled.span
                        classname="mock-css."
                      >
                        Tag 2
                      </mock-styled.span>
                    </mock-styled.div>
                  </mock-styled.div>
                </mock-styled.div>
                <h2
                  class="mock-css.
  font-family: var(--font-sans-serif);
  color: var(--black);
  font-size: 15px;
  line-height: 24px;
  font-weight: 400;

  &., {
    color: var(--neutral-500);
  }

  &., {
    color: var(--neutral-400);

    a {
      color: var(--neutral-400);
    }
  }

  &., {
    font-weight: var(--font-weight-default);
  }

  &., {
    font-weight: var(--font-weight-medium);
  }

  &., {
    font-weight: var(--font-weight-bold);
  }

  &., {
    text-align: center;
  }

  &., {
    text-transform: capitalize;
  }

  &., {
    text-transform: uppercase;
  }

  &., {
    font-style: italic;
  }

  &., {
    margin-bottom: 0;
  }

  &., {
    margin-bottom: 0.5rem;
  }

  &., {
    margin-bottom: 1.5rem;
  }

  &., {
    color: var(--intent-primary);
  }

  &., {
    color: var(--intent-neutral);
  }

  &., {
    color: var(--intent-success);
  }

  &., {
    color: var(--intent-pending);
  }

  &., {
    color: var(--intent-warning);
  }

  &., {
    color: var(--intent-danger);
  }

  &., {
    color: var(--intent-default);
  }
 mock-css.
  font-size: 18px;
  line-height: 24px;
 mock-css."
                >
                  Page Sub Title
                </h2>
                <div
                  class="mock-css.
  display: flex;
  min-height: 0;
  min-width: 0;

  &., {
    background: var(--neutral-050);
  }

  &., {
    max-width: 1200px;
    margin: 0 auto;
  }
"
                >
                  <div
                    class="mock-css.
  font-family: var(--font-sans-serif);
  color: var(--black);
  font-size: 15px;
  line-height: 24px;
  font-weight: 400;

  &., {
    color: var(--neutral-500);
  }

  &., {
    color: var(--neutral-400);

    a {
      color: var(--neutral-400);
    }
  }

  &., {
    font-weight: var(--font-weight-default);
  }

  &., {
    font-weight: var(--font-weight-medium);
  }

  &., {
    font-weight: var(--font-weight-bold);
  }

  &., {
    text-align: center;
  }

  &., {
    text-transform: capitalize;
  }

  &., {
    text-transform: uppercase;
  }

  &., {
    font-style: italic;
  }

  &., {
    margin-bottom: 0;
  }

  &., {
    margin-bottom: 0.5rem;
  }

  &., {
    margin-bottom: 1.5rem;
  }

  &., {
    color: var(--intent-primary);
  }

  &., {
    color: var(--intent-neutral);
  }

  &., {
    color: var(--intent-success);
  }

  &., {
    color: var(--intent-pending);
  }

  &., {
    color: var(--intent-warning);
  }

  &., {
    color: var(--intent-danger);
  }

  &., {
    color: var(--intent-default);
  }
"
                  >
                    Page Info 1
                  </div>
                  <mock-styled.span />
                  <div
                    class="mock-css.
  font-family: var(--font-sans-serif);
  color: var(--black);
  font-size: 15px;
  line-height: 24px;
  font-weight: 400;

  &., {
    color: var(--neutral-500);
  }

  &., {
    color: var(--neutral-400);

    a {
      color: var(--neutral-400);
    }
  }

  &., {
    font-weight: var(--font-weight-default);
  }

  &., {
    font-weight: var(--font-weight-medium);
  }

  &., {
    font-weight: var(--font-weight-bold);
  }

  &., {
    text-align: center;
  }

  &., {
    text-transform: capitalize;
  }

  &., {
    text-transform: uppercase;
  }

  &., {
    font-style: italic;
  }

  &., {
    margin-bottom: 0;
  }

  &., {
    margin-bottom: 0.5rem;
  }

  &., {
    margin-bottom: 1.5rem;
  }

  &., {
    color: var(--intent-primary);
  }

  &., {
    color: var(--intent-neutral);
  }

  &., {
    color: var(--intent-success);
  }

  &., {
    color: var(--intent-pending);
  }

  &., {
    color: var(--intent-warning);
  }

  &., {
    color: var(--intent-danger);
  }

  &., {
    color: var(--intent-default);
  }
"
                  >
                    Page Info 2
                  </div>
                  <mock-styled.span />
                  <div
                    class="mock-css.
  font-family: var(--font-sans-serif);
  color: var(--black);
  font-size: 15px;
  line-height: 24px;
  font-weight: 400;

  &., {
    color: var(--neutral-500);
  }

  &., {
    color: var(--neutral-400);

    a {
      color: var(--neutral-400);
    }
  }

  &., {
    font-weight: var(--font-weight-default);
  }

  &., {
    font-weight: var(--font-weight-medium);
  }

  &., {
    font-weight: var(--font-weight-bold);
  }

  &., {
    text-align: center;
  }

  &., {
    text-transform: capitalize;
  }

  &., {
    text-transform: uppercase;
  }

  &., {
    font-style: italic;
  }

  &., {
    margin-bottom: 0;
  }

  &., {
    margin-bottom: 0.5rem;
  }

  &., {
    margin-bottom: 1.5rem;
  }

  &., {
    color: var(--intent-primary);
  }

  &., {
    color: var(--intent-neutral);
  }

  &., {
    color: var(--intent-success);
  }

  &., {
    color: var(--intent-pending);
  }

  &., {
    color: var(--intent-warning);
  }

  &., {
    color: var(--intent-danger);
  }

  &., {
    color: var(--intent-default);
  }
"
                  >
                    Page Info 3
                  </div>
                </div>
              </div>
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div
                classname=""
              >
                <mock-styled.button
                  classname="mock-css. mock-css."
                >
                  <mock-styled.div />
                  Button 1
                </mock-styled.button>
                <mock-styled.button
                  classname="mock-css. mock-css."
                >
                  <mock-styled.div />
                  Button 2
                </mock-styled.button>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname="mock-css.
  width: 100%;
  justify-content: space-evenly;
"
          >
            <mock-styled.div
              classname=""
              role="tablist"
            >
              <mock-styled.input
                aria-selected="true"
                classname=""
                id="tab-1-fw"
                name="my-cool-tabs-full-width"
                type="radio"
                value="tab-1-fw"
              />
              <mock-styled.label
                classname=""
                htmlfor="tab-1-fw"
                role="tab"
                tabindex="0"
              >
                <mock-styled.span
                  classname=""
                >
                  Tab Content 1
                </mock-styled.span>
              </mock-styled.label>
              <mock-styled.input
                aria-selected="false"
                classname=""
                id="tab-2-fw"
                name="my-cool-tabs-full-width"
                type="radio"
                value="tab-2-fw"
              />
              <mock-styled.label
                classname=""
                htmlfor="tab-2-fw"
                role="tab"
                tabindex="0"
              >
                <mock-styled.span
                  classname=""
                >
                  Tab Content 2
                </mock-styled.span>
              </mock-styled.label>
              <mock-styled.input
                aria-selected="false"
                classname=""
                id="tab-3-fw"
                name="my-cool-tabs-full-width"
                type="radio"
                value="tab-3-fw"
              />
              <mock-styled.label
                classname=""
                htmlfor="tab-3-fw"
                role="tab"
                tabindex="0"
              >
                <mock-styled.span
                  classname=""
                >
                  Tab Content 3
                </mock-styled.span>
              </mock-styled.label>
            </mock-styled.div>
            <mock-styled.div
              classname="mock-css.
  width: 100%;
  justify-content: space-evenly;
 mock-css."
            />
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div
      classname=""
    >
      <mock-styled.div
        classname=""
      >
        <mock-styled.div
          classname="mock-css.
  margin-bottom: var(--util-rems-6);
"
        >
          <div
            class="mock-css.
  display: flex;
  min-height: 0;
  min-width: 0;

  &., {
    background: var(--neutral-050);
  }

  &., {
    max-width: 1200px;
    margin: 0 auto;
  }
 mock-css.
  align-items: center;
"
          >
            <mock-styled.a
              aria-current="false"
              aria-label="Breadcrumb item hit return to navigate to Home"
              role="button"
              tabindex="0"
            >
              Home
            </mock-styled.a>
          </div>
          <div
            class="mock-css.
  display: flex;
  min-height: 0;
  min-width: 0;

  &., {
    background: var(--neutral-050);
  }

  &., {
    max-width: 1200px;
    margin: 0 auto;
  }
 mock-css.
  align-items: center;
"
          >
            <mock-styled.span
              classname="mock-css.
  margin-right: var(--util-rems-2);
 mock-css."
              style="font-size: 12px;"
            >
              <svg
                role="img"
                style="font-size: 12px;"
                title="Icon image with name chevronRight"
              />
            </mock-styled.span>
            <mock-styled.a
              aria-current="false"
              aria-label="Breadcrumb item hit return to navigate to Level 1"
              role="button"
              tabindex="0"
            >
              Level 1
            </mock-styled.a>
          </div>
          <div
            class="mock-css.
  display: flex;
  min-height: 0;
  min-width: 0;

  &., {
    background: var(--neutral-050);
  }

  &., {
    max-width: 1200px;
    margin: 0 auto;
  }
 mock-css.
  align-items: center;
"
          >
            <mock-styled.span
              classname="mock-css.
  margin-right: var(--util-rems-2);
 mock-css."
              style="font-size: 12px;"
            >
              <svg
                role="img"
                style="font-size: 12px;"
                title="Icon image with name chevronRight"
              />
            </mock-styled.span>
            <mock-styled.a
              aria-current="false"
              aria-label="Breadcrumb item hit return to navigate to Level 2"
              role="button"
              tabindex="0"
            >
              Level 2
            </mock-styled.a>
          </div>
          <div
            class="mock-css.
  display: flex;
  min-height: 0;
  min-width: 0;

  &., {
    background: var(--neutral-050);
  }

  &., {
    max-width: 1200px;
    margin: 0 auto;
  }
 mock-css.
  align-items: center;
"
          >
            <mock-styled.span
              classname="mock-css.
  margin-right: var(--util-rems-2);
 mock-css."
              style="font-size: 12px;"
            >
              <svg
                role="img"
                style="font-size: 12px;"
                title="Icon image with name chevronRight"
              />
            </mock-styled.span>
            <mock-styled.a
              aria-current="page"
              aria-label="Breadcrumb item hit return to navigate to Level 3"
              role="button"
              tabindex="0"
            >
              Level 3
            </mock-styled.a>
          </div>
        </mock-styled.div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div
            classname=""
          >
            <mock-styled.mock-styled.div
              classname=""
              role="img"
              title="An avatar image"
            >
              <img
                alt="An image with source https://picsum.photos/200/300"
                src="https://picsum.photos/200/300"
              />
            </mock-styled.mock-styled.div>
            <div
              class="mock-css.
  display: flex;
  min-height: 0;
  min-width: 0;

  &., {
    background: var(--neutral-050);
  }

  &., {
    max-width: 1200px;
    margin: 0 auto;
  }
 mock-css.
  flex-direction: column;
"
            >
              <mock-styled.div
                classname=""
              >
                <h1
                  class="mock-css.
  font-family: var(--font-sans-serif);
  color: var(--black);
  font-size: 15px;
  line-height: 24px;
  font-weight: 400;

  &., {
    color: var(--neutral-500);
  }

  &., {
    color: var(--neutral-400);

    a {
      color: var(--neutral-400);
    }
  }

  &., {
    font-weight: var(--font-weight-default);
  }

  &., {
    font-weight: var(--font-weight-medium);
  }

  &., {
    font-weight: var(--font-weight-bold);
  }

  &., {
    text-align: center;
  }

  &., {
    text-transform: capitalize;
  }

  &., {
    text-transform: uppercase;
  }

  &., {
    font-style: italic;
  }

  &., {
    margin-bottom: 0;
  }

  &., {
    margin-bottom: 0.5rem;
  }

  &., {
    margin-bottom: 1.5rem;
  }

  &., {
    color: var(--intent-primary);
  }

  &., {
    color: var(--intent-neutral);
  }

  &., {
    color: var(--intent-success);
  }

  &., {
    color: var(--intent-pending);
  }

  &., {
    color: var(--intent-warning);
  }

  &., {
    color: var(--intent-danger);
  }

  &., {
    color: var(--intent-default);
  }
 mock-css.
  font-size: 24px;
  line-height: 32px;
 mock-css. mock-css.
  margin-right: var(--util-rems-3);
"
                >
                  Page Title
                </h1>
                <mock-styled.div
                  classname=""
                >
                  <mock-styled.div>
                    <mock-styled.span
                      classname="mock-css."
                    >
                      Tag 1
                    </mock-styled.span>
                    <mock-styled.span
                      classname="mock-css."
                    >
                      Tag 2
                    </mock-styled.span>
                  </mock-styled.div>
                </mock-styled.div>
              </mock-styled.div>
              <h2
                class="mock-css.
  font-family: var(--font-sans-serif);
  color: var(--black);
  font-size: 15px;
  line-height: 24px;
  font-weight: 400;

  &., {
    color: var(--neutral-500);
  }

  &., {
    color: var(--neutral-400);

    a {
      color: var(--neutral-400);
    }
  }

  &., {
    font-weight: var(--font-weight-default);
  }

  &., {
    font-weight: var(--font-weight-medium);
  }

  &., {
    font-weight: var(--font-weight-bold);
  }

  &., {
    text-align: center;
  }

  &., {
    text-transform: capitalize;
  }

  &., {
    text-transform: uppercase;
  }

  &., {
    font-style: italic;
  }

  &., {
    margin-bottom: 0;
  }

  &., {
    margin-bottom: 0.5rem;
  }

  &., {
    margin-bottom: 1.5rem;
  }

  &., {
    color: var(--intent-primary);
  }

  &., {
    color: var(--intent-neutral);
  }

  &., {
    color: var(--intent-success);
  }

  &., {
    color: var(--intent-pending);
  }

  &., {
    color: var(--intent-warning);
  }

  &., {
    color: var(--intent-danger);
  }

  &., {
    color: var(--intent-default);
  }
 mock-css.
  font-size: 18px;
  line-height: 24px;
 mock-css."
              >
                Page Sub Title
              </h2>
              <div
                class="mock-css.
  display: flex;
  min-height: 0;
  min-width: 0;

  &., {
    background: var(--neutral-050);
  }

  &., {
    max-width: 1200px;
    margin: 0 auto;
  }
"
              >
                <div
                  class="mock-css.
  font-family: var(--font-sans-serif);
  color: var(--black);
  font-size: 15px;
  line-height: 24px;
  font-weight: 400;

  &., {
    color: var(--neutral-500);
  }

  &., {
    color: var(--neutral-400);

    a {
      color: var(--neutral-400);
    }
  }

  &., {
    font-weight: var(--font-weight-default);
  }

  &., {
    font-weight: var(--font-weight-medium);
  }

  &., {
    font-weight: var(--font-weight-bold);
  }

  &., {
    text-align: center;
  }

  &., {
    text-transform: capitalize;
  }

  &., {
    text-transform: uppercase;
  }

  &., {
    font-style: italic;
  }

  &., {
    margin-bottom: 0;
  }

  &., {
    margin-bottom: 0.5rem;
  }

  &., {
    margin-bottom: 1.5rem;
  }

  &., {
    color: var(--intent-primary);
  }

  &., {
    color: var(--intent-neutral);
  }

  &., {
    color: var(--intent-success);
  }

  &., {
    color: var(--intent-pending);
  }

  &., {
    color: var(--intent-warning);
  }

  &., {
    color: var(--intent-danger);
  }

  &., {
    color: var(--intent-default);
  }
"
                >
                  Page Info 1
                </div>
                <mock-styled.span />
                <div
                  class="mock-css.
  font-family: var(--font-sans-serif);
  color: var(--black);
  font-size: 15px;
  line-height: 24px;
  font-weight: 400;

  &., {
    color: var(--neutral-500);
  }

  &., {
    color: var(--neutral-400);

    a {
      color: var(--neutral-400);
    }
  }

  &., {
    font-weight: var(--font-weight-default);
  }

  &., {
    font-weight: var(--font-weight-medium);
  }

  &., {
    font-weight: var(--font-weight-bold);
  }

  &., {
    text-align: center;
  }

  &., {
    text-transform: capitalize;
  }

  &., {
    text-transform: uppercase;
  }

  &., {
    font-style: italic;
  }

  &., {
    margin-bottom: 0;
  }

  &., {
    margin-bottom: 0.5rem;
  }

  &., {
    margin-bottom: 1.5rem;
  }

  &., {
    color: var(--intent-primary);
  }

  &., {
    color: var(--intent-neutral);
  }

  &., {
    color: var(--intent-success);
  }

  &., {
    color: var(--intent-pending);
  }

  &., {
    color: var(--intent-warning);
  }

  &., {
    color: var(--intent-danger);
  }

  &., {
    color: var(--intent-default);
  }
"
                >
                  Page Info 2
                </div>
                <mock-styled.span />
                <div
                  class="mock-css.
  font-family: var(--font-sans-serif);
  color: var(--black);
  font-size: 15px;
  line-height: 24px;
  font-weight: 400;

  &., {
    color: var(--neutral-500);
  }

  &., {
    color: var(--neutral-400);

    a {
      color: var(--neutral-400);
    }
  }

  &., {
    font-weight: var(--font-weight-default);
  }

  &., {
    font-weight: var(--font-weight-medium);
  }

  &., {
    font-weight: var(--font-weight-bold);
  }

  &., {
    text-align: center;
  }

  &., {
    text-transform: capitalize;
  }

  &., {
    text-transform: uppercase;
  }

  &., {
    font-style: italic;
  }

  &., {
    margin-bottom: 0;
  }

  &., {
    margin-bottom: 0.5rem;
  }

  &., {
    margin-bottom: 1.5rem;
  }

  &., {
    color: var(--intent-primary);
  }

  &., {
    color: var(--intent-neutral);
  }

  &., {
    color: var(--intent-success);
  }

  &., {
    color: var(--intent-pending);
  }

  &., {
    color: var(--intent-warning);
  }

  &., {
    color: var(--intent-danger);
  }

  &., {
    color: var(--intent-default);
  }
"
                >
                  Page Info 3
                </div>
              </div>
            </div>
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.div
              classname=""
            >
              <mock-styled.button
                classname="mock-css. mock-css."
              >
                <mock-styled.div />
                Button 1
              </mock-styled.button>
              <mock-styled.button
                classname="mock-css. mock-css."
              >
                <mock-styled.div />
                Button 2
              </mock-styled.button>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          classname="mock-css.
  width: 100%;
  justify-content: space-evenly;
"
        >
          <mock-styled.div
            classname=""
            role="tablist"
          >
            <mock-styled.input
              aria-selected="true"
              classname=""
              id="tab-1-fw"
              name="my-cool-tabs-full-width"
              type="radio"
              value="tab-1-fw"
            />
            <mock-styled.label
              classname=""
              htmlfor="tab-1-fw"
              role="tab"
              tabindex="0"
            >
              <mock-styled.span
                classname=""
              >
                Tab Content 1
              </mock-styled.span>
            </mock-styled.label>
            <mock-styled.input
              aria-selected="false"
              classname=""
              id="tab-2-fw"
              name="my-cool-tabs-full-width"
              type="radio"
              value="tab-2-fw"
            />
            <mock-styled.label
              classname=""
              htmlfor="tab-2-fw"
              role="tab"
              tabindex="0"
            >
              <mock-styled.span
                classname=""
              >
                Tab Content 2
              </mock-styled.span>
            </mock-styled.label>
            <mock-styled.input
              aria-selected="false"
              classname=""
              id="tab-3-fw"
              name="my-cool-tabs-full-width"
              type="radio"
              value="tab-3-fw"
            />
            <mock-styled.label
              classname=""
              htmlfor="tab-3-fw"
              role="tab"
              tabindex="0"
            >
              <mock-styled.span
                classname=""
              >
                Tab Content 3
              </mock-styled.span>
            </mock-styled.label>
          </mock-styled.div>
          <mock-styled.div
            classname="mock-css.
  width: 100%;
  justify-content: space-evenly;
 mock-css."
          />
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
