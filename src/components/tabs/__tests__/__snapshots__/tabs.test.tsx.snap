// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Tabs > should match a snapshot and render children 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="el-tabs-full-width el-tabs-wrap"
      >
        <div
          class="mocked-styled-4 el-tabs-options-wrap"
          role="tablist"
        >
          <input
            aria-selected="true"
            class="mocked-styled-1 el-tab"
            id="option-1"
            name="my-cool-toggle-radio"
            type="radio"
            value="option-1"
          />
          <label
            class="mocked-styled-2 el-tabs-label"
            for="option-1"
            role="tab"
            tabindex="0"
          >
            <span
              class="mocked-styled-0 el-tabs-item"
            >
              Option 1
            </span>
          </label>
          <input
            aria-selected="false"
            class="mocked-styled-1 el-tab"
            id="option-2"
            name="my-cool-toggle-radio"
            type="radio"
            value="option-2"
          />
          <label
            class="mocked-styled-2 el-tabs-label"
            for="option-2"
            role="tab"
            tabindex="0"
          >
            <span
              class="mocked-styled-0 el-tabs-item"
            >
              Option 2
            </span>
          </label>
          <input
            aria-selected="false"
            class="mocked-styled-1 el-tab"
            id="option-3"
            name="my-cool-toggle-radio"
            type="radio"
            value="option-3"
          />
          <label
            class="mocked-styled-2 el-tabs-label"
            for="option-3"
            role="tab"
            tabindex="0"
          >
            <span
              class="mocked-styled-0 el-tabs-item"
            >
              Option 3
            </span>
          </label>
        </div>
        <div
          class="el-tabs-full-width el-tabs-footer"
        />
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="el-tabs-full-width el-tabs-wrap"
    >
      <div
        class="mocked-styled-4 el-tabs-options-wrap"
        role="tablist"
      >
        <input
          aria-selected="true"
          class="mocked-styled-1 el-tab"
          id="option-1"
          name="my-cool-toggle-radio"
          type="radio"
          value="option-1"
        />
        <label
          class="mocked-styled-2 el-tabs-label"
          for="option-1"
          role="tab"
          tabindex="0"
        >
          <span
            class="mocked-styled-0 el-tabs-item"
          >
            Option 1
          </span>
        </label>
        <input
          aria-selected="false"
          class="mocked-styled-1 el-tab"
          id="option-2"
          name="my-cool-toggle-radio"
          type="radio"
          value="option-2"
        />
        <label
          class="mocked-styled-2 el-tabs-label"
          for="option-2"
          role="tab"
          tabindex="0"
        >
          <span
            class="mocked-styled-0 el-tabs-item"
          >
            Option 2
          </span>
        </label>
        <input
          aria-selected="false"
          class="mocked-styled-1 el-tab"
          id="option-3"
          name="my-cool-toggle-radio"
          type="radio"
          value="option-3"
        />
        <label
          class="mocked-styled-2 el-tabs-label"
          for="option-3"
          role="tab"
          tabindex="0"
        >
          <span
            class="mocked-styled-0 el-tabs-item"
          >
            Option 3
          </span>
        </label>
      </div>
      <div
        class="el-tabs-full-width el-tabs-footer"
      />
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
